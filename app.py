import streamlit as st
import google.generativeai as genai

# --- Configura√ß√£o da P√°gina e da API ---
# NOTA: Substitua "SUA_API_KEY_AQUI" pela sua chave de API do Google AI Studio.
# Voc√™ pode obter uma em: https://makersuite.google.com/app/apikey
try:
    from api_key import GOOGLE_API_KEY
except ImportError:
    GOOGLE_API_KEY = "SUA_API_KEY_AQUI"

st.set_page_config(
    page_title="Gerador de Roteiros Pedag√≥gicos",
    page_icon="‚ú®",
    layout="wide"
)

# Configurando o modelo Gemini
if GOOGLE_API_KEY != "SUA_API_KEY_AQUI":
    genai.configure(api_key=GOOGLE_API_KEY)
    model = genai.GenerativeModel('gemini-pro')
else:
    model = None

# --- Cabe√ßalho e T√≠tulo ---
st.title("Painel de Roteiros de Atividades ‚ú®")
st.markdown("Use o menu √† esquerda para navegar entre os roteiros existentes ou crie um novo com o poder da IA.")

# --- Barra Lateral (Sidebar) ---
st.sidebar.header("Navega√ß√£o")
pagina_selecionada = st.sidebar.radio(
    "Selecione uma op√ß√£o:",
    ["Criar Roteiro com IA", "Ver Roteiros Existentes"]
)

# --- Funcionalidade Principal ---

if pagina_selecionada == "Criar Roteiro com IA":
    st.header("‚ú® Criar Roteiro Personalizado com IA")
    st.markdown("Preencha os campos abaixo para gerar uma atividade sob medida.")

    if not model:
        st.error("Por favor, configure sua API Key do Google AI no c√≥digo para usar esta funcionalidade.")
    else:
        # --- NOVOS CAMPOS ADICIONADOS AQUI ---
        col1, col2 = st.columns(2)
        with col1:
            nome_paciente = st.text_input("Nome do Paciente / Aluno")
        with col2:
            numero_sessao = st.number_input("N√∫mero da Sess√£o", min_value=1, step=1)
        
        with st.form("roteiro_form"):
            st.markdown("---")
            st.subheader("Detalhes para a Cria√ß√£o do Roteiro")
            
            tema_aula = st.text_input("Qual o tema da aula ou conte√∫do a ser trabalhado?", "Consci√™ncia fonol√≥gica")
            
            faixa_etaria = st.selectbox(
                "Qual a faixa et√°ria da crian√ßa/aluno?",
                ("0-1 ano", "1-2 anos", "2-3 anos", "3-4 anos", "4-5 anos", "5-6 anos", "6-8 anos", "8-10 anos")
            )

            dificuldade = st.text_input("Qual a principal dificuldade ou transtorno do aluno?", "Dislexia")
            
            ferramentas = st.multiselect(
                "Quais ferramentas digitais voc√™ gostaria de usar? (Opcional)",
                ["Wordwall", "Genially", "Padlet", "Kahoot", "Jamboard", "Pixton", "Canva", "YouTube"]
            )
            
            # --- NOVO CAMPO DE COMANDOS ADICIONADO AQUI ---
            comandos_ia = st.text_area(
                "Informa√ß√µes Adicionais ou Comandos para a IA", 
                placeholder="Ex: Crie uma hist√≥ria curta com o personagem. Use frases simples e repita a palavra-chave 'barco' pelo menos 3 vezes."
            )
            
            submitted = st.form_submit_button("Gerar Roteiro")

            if submitted:
                with st.spinner("Aguarde, a IA est√° criando um roteiro incr√≠vel..."):
                    # Construindo o prompt para a IA
                    prompt_parts = [
                        "Crie um roteiro de aula ou interven√ß√£o pedag√≥gica estruturado.",
                        f"Tema principal: {tema_aula}.",
                        f"Faixa et√°ria: {faixa_etaria}.",
                        f"Foco da adapta√ß√£o: {dificuldade}.",
                        "Estruture a resposta com: Objetivo, Ferramentas Sugeridas e um Passo a Passo detalhado (Acolhida, Apresenta√ß√£o, Desenvolvimento, S√≠ntese, Encerramento).",
                        "Seja criativo e did√°tico."
                    ]
                    if ferramentas:
                        prompt_parts.append(f"Incorpore o uso das seguintes ferramentas: {', '.join(ferramentas)}.")
                    
                    # --- ADICIONANDO OS NOVOS COMANDOS AO PROMPT ---
                    if comandos_ia:
                        prompt_parts.append(f"Instru√ß√£o adicional importante do terapeuta: {comandos_ia}")

                    prompt = "\n".join(prompt_parts)
                    
                    try:
                        response = model.generate_content(prompt)
                        st.subheader(f"üìù Roteiro Gerado para: {nome_paciente} (Sess√£o {numero_sessao})")
                        st.markdown(response.text)
                    except Exception as e:
                        st.error(f"Ocorreu um erro ao gerar o roteiro: {e}")


elif pagina_selecionada == "Ver Roteiros Existentes":
    st.header("üìö Banco de Roteiros de Atividades")
    st.markdown("Aqui voc√™ encontrar√° os 40 roteiros que desenvolvemos anteriormente.")

    # Exemplo de como exibir alguns roteiros (em um app real, isso viria de um banco de dados)
    st.subheader("Roteiro 19 ‚Äì Gincana de Jogos R√°pidos (Adaptado para TDAH)")
    st.markdown("""
    - **Objetivo:** Revisar conte√∫dos de forma din√¢mica, mantendo a aten√ß√£o atrav√©s da novidade e da competi√ß√£o amig√°vel.
    - **Ferramentas sugeridas:** Baamboozle, Wordwall, LearningApps.
    - **Passo a passo:**
        - **Acolhida (1 min):** Anunciar uma "gincana de jogos" com 3 rodadas r√°pidas para criar expectativa.
        - **Apresenta√ß√£o (1 min):** Explicar que cada jogo ser√° diferente e r√°pido, mantendo o ritmo acelerado.
        - **Desenvolvimento (15 min):** Realizar rodadas de 5 minutos cada, alternando entre a competi√ß√£o em equipe do Baamboozle, um jogo de "Roda Aleat√≥ria" do Wordwall e uma atividade de "Arrastar e Soltar" do LearningApps.
        - **S√≠ntese (2 min):** Perguntar qual dos tr√™s jogos foi o favorito e por qu√™, permitindo uma breve express√£o de prefer√™ncia.
        - **Encerramento (1 min):** Comemorar a participa√ß√£o e os pontos de todos na gincana, focando no esfor√ßo e na divers√£o.
    """)

    st.subheader("Roteiro 21 ‚Äì Mapa Interativo de Sons (Adaptado para Dislexia)")
    st.markdown("""
    - **Objetivo:** Fortalecer a consci√™ncia fonol√≥gica e a associa√ß√£o grafema-fonema com forte suporte de √°udio e visual.
    - **Ferramentas sugeridas:** ThingLink, Genially.
    - **Passo a passo:**
        - **Acolhida (2 min):** Iniciar com um som de um animal (√°udio) e pedir para adivinhar qual √© e qual a letra inicial do nome.
        - **Apresenta√ß√£o (3 min):** Apresentar uma imagem interativa (ex: uma fazenda) no ThingLink com hotspots. Explicar que ao clicar nos animais, eles ouvir√£o o nome e o som da letra inicial.
        - **Desenvolvimento (10 min):** O paciente explora a imagem. Ao clicar em um hotspot (ex: na VACA), ele v√™ a palavra escrita e pode clicar para ouvir a narra√ß√£o: "Vaca come√ßa com o som /v/". O desafio √© encontrar todos os objetos que come√ßam com um som espec√≠fico.
        - **S√≠ntese (3 min):** O paciente deve falar em voz alta outras duas palavras que tamb√©m comecem com o mesmo som, sem a necessidade de escrev√™-las.
        - **Encerramento (2 min):** Parabenizar pela explora√ß√£o sonora e refor√ßar o som aprendido.
    """)
    
    # Adicione mais roteiros aqui conforme necess√°rio...
